version: 2.1
jobs:
  build:
    working_directory: ~/content-editor
    docker:
      - image: circleci/node:10.14.1-browsers
        environment:
           framework_version_number: $CIRCLE_BRANCH
           editorType: contentEditor
           editor_version_number: $CIRCLE_BRANCH

    steps:
      - checkout:
          path: ~/content-editor

      - restore_cache:
          key: ce-dependency-cache-{{ checksum "package.json" }}

      - run:
          name: clone plugins
          command: |
            if [ -z $CIRCLE_PR_NUMBER ]; then
            target_branch=$CIRCLE_BRANCH
            git clone https://github.com/project-sunbird/sunbird-content-plugins.git plugins -b $target_branch
            else
            prdata=$(curl -X GET -u $GITHUB_USER_TOKEN:x-oauth-basic https://api.github.com/repos/project-sunbird/sunbird-content-editor/pulls/$CIRCLE_PR_NUMBER)
            target_branch=$(echo "${prdata}" | jq -r '.base.ref')
            git clone https://github.com/project-sunbird/sunbird-content-plugins.git plugins -b $target_branch
            fi

      - run: sudo npm install -g bower@1.8.0 grunt-cli@1.2.0 gulp@3.9.1
      - run: npm install
      - run: cd app && bower cache clean --allow-root
      - run: cd app && bower prune -f --allow-root
      - run: cd app && bower install --force -V --allow-root
      - run: gulp packageCorePlugins
      - run: npm run build-plugins
      - run: npm run build

      - save_cache:
          key: ce-dependency-cache-{{ checksum "package.json" }}
          paths: ./node_modules

      - run:
          name: test-with-coverage
          command: 'npm run test-with-coverage'

      - run: mkdir -p /tmp/coverage && cp /home/circleci/content-editor/coverage/lcov/HeadlessChrome\ 71.0.3578\ \(Linux\ 0.0.0\)/lcov.info /tmp/coverage
      
      - run:
          name: Install NVM
          command: 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh|bash'

      - run:
          name: alter node version
          command: 'source ~/.nvm/nvm.sh && nvm install 14 && nvm use 14 && nvm alias default 14 && node -v'
      - run:
          name: Install sonar scanner
          command: 'source ~/.nvm/nvm.sh &&  npm install -g sonarqube-scanner'

      - run:
          name: Sonar scanner
          command:  source ~/.nvm/nvm.sh && sonar-scanner

      - store_artifacts:
          path: /tmp/coverage
          destination: coverage


workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
